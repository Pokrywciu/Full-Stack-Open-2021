{"version":3,"sources":["services/persons.js","components/Contact.js","components/Contacts.js","components/ContactForm.js","components/Filter.js","components/Notification.js","App.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Contact","contact","name","number","Contacts","contacts","setPerson","setMessage","map","onClick","person","window","confirm","personService","filter","item","catch","error","text","type","setTimeout","ContactForm","addPerson","short","onSubmit","value","newName","onChange","handleNameChange","newNumber","handleNumberChange","Filter","filtr","handleSearchChange","Notification","message","className","App","useState","setNewName","setNewNumber","setFiltr","useEffect","console","log","initialPerson","length","filtredPerson","toLowerCase","includes","event","target","preventDefault","personObject","returnedPerson","concat","personarray","e","_id","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a394e470.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/persons'\r\n\r\nconst getAll = () => {\r\n  const request = axios.get(baseUrl)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n  const request = axios.post(baseUrl, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n  return request.then(response => response.data)\r\n}\r\n\r\nconst del = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n  }\r\n\r\nexport default { getAll, create, update, del }","import React from 'react'\r\n\r\nconst Contact = ({ contact }) => {\r\n  return (\r\n    <li>{contact.name} {contact.number}</li>\r\n  )\r\n}\r\nexport default Contact","import React from 'react'\r\nimport Contact from './Contact'\r\nimport personService from '../services/persons'\r\n\r\n\r\n\r\nconst Contacts=({contacts, setPerson, setMessage})=>{\r\n\r\n    \r\n\r\n    const del = (person) =>{\r\n\r\n        const result = window.confirm(`Do you want to delete ${person.name}?`)\r\n    if (result){\r\n        personService\r\n        .del(person.id)\r\n          .then(response =>{\r\n            setPerson(contacts.filter(item=>item!==person))\r\n          })\r\n          .catch(error=>{\r\n              setMessage({\r\n                  text: `${person.name} was already removed`,\r\n                  type: \"error\"\r\n              })\r\n              setTimeout(()=>{\r\n                  setMessage(null)\r\n              }, 3000)\r\n              setPerson(contacts.filter(item=>item!==person))\r\n          })\r\n      }\r\n    }\r\nreturn(\r\n    <ul>\r\n        {contacts.map(contact=>\r\n        <div>\r\n            <Contact key={contact.id} contact={contact}/>\r\n            <button onClick={()=>del(contact)}>Delete</button>\r\n        </div>\r\n            )\r\n        }\r\n    </ul>\r\n)\r\n}\r\nexport default Contacts\r\n","import React from 'react'\r\n\r\nconst ContactForm =({addPerson, short})=>{\r\n    return(\r\n        <form onSubmit={addPerson}>\r\n        <div>\r\n          name: <input id=\"name\" value={short.newName} onChange={short.handleNameChange}/>\r\n          number: <input id=\"number\" value={short.newNumber} onChange={short.handleNumberChange}/>\r\n        </div>\r\n        <div>\r\n          <button type=\"submit\">add</button>   \r\n        </div>\r\n      </form>\r\n    )\r\n}\r\nexport default ContactForm","import React from 'react'\r\n\r\nconst Filter =({filtr, short})=>{\r\n    return(\r\n        <div>\r\n        filter shown with: \r\n        <input id=\"search\" value={filtr} onChange={short.handleSearchChange}/>\r\n      </div>\r\n    )\r\n}\r\nexport default Filter","const Notification = ({ message }) => {\r\n    if (message === null) {\r\n      return null\r\n    }\r\n  \r\n    return (\r\n    <div className={`notification notification_${message.type}`}>\r\n        {message.text}\r\n    </div>\r\n    )\r\n  }\r\nexport default Notification","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport personService from './services/persons'\r\n\r\nimport Contact from './components/Contact'\r\nimport Contacts from './components/Contacts'\r\nimport ContactForm from './components/ContactForm'\r\nimport Filter from './components/Filter'\r\nimport Notification from './components/Notification'\r\n\r\nconst App = () => {\r\n  const [person, setPerson] = useState([])\r\n  const [ newName, setNewName ] = useState()\r\n  const [ newNumber, setNewNumber]=useState()\r\n  const [filtr, setFiltr]=useState()\r\n  const [message, setMessage]=useState(null)\r\n  const [errorMessage, setErrorMessage]=useState(null)\r\n\r\n\r\n\r\n\r\n  const hook = () =>{\r\n    console.log('effect')\r\n    personService\r\n      .getAll()\r\n      .then(initialPerson=>{\r\n        setPerson(initialPerson)\r\n      })\r\n  }\r\n  useEffect(hook, [])\r\n  console.log('render', person.length, 'person')\r\n\r\n  const addPerson=(event)=>{\r\n    event.preventDefault()\r\n    const personObject={\r\n      name: newName,\r\n      number: newNumber,\r\n      id: person.length+1,\r\n    }\r\n    personService\r\n      .create(personObject)\r\n        .then(returnedPerson=>{\r\n          setMessage({\r\n            text: `Added ${newName}`,\r\n            type: \"success\"\r\n          })\r\n          setTimeout(()=>{\r\n            setMessage(null)\r\n          },3000)\r\n          setPerson(person.concat(returnedPerson))\r\n          setNewName('')\r\n          setNewNumber('')\r\n        })\r\n\r\n    const personarray = person.map(e=>e.name)\r\n    const oldPerson = person.filter(e => e.name === newName)\r\n    const _id = oldPerson.map(e => e.id)\r\n    \r\n    if (personarray.includes(personObject.name)){\r\n      const result = window.confirm(`${personObject.name} is already added to phonebook, replace the old number with a new one?`)\r\n      if (result)\r\n      {personService\r\n        .update(_id, personObject)\r\n        .then(returnedPerson=>{\r\n          setPerson(person.map(person=>person.id===returnedPerson.id ? returnedPerson : person))\r\n          setMessage(`The number is changed`)\r\n          setTimeout(()=>{\r\n            setMessage(null)\r\n          },3000)\r\n        })}\r\n    }\r\n\r\n\r\n          }\r\n\r\n\r\n  const handleNameChange=(event)=>{\r\n    setNewName(event.target.value)\r\n  }\r\n  const handleNumberChange=(event)=>{\r\n    setNewNumber(event.target.value)\r\n  }\r\n  const handleSearchChange=(event)=>{\r\n    setFiltr(event.target.value)\r\n  }\r\n \r\n  const filtredPerson=person.filter(item=>item.name.toLowerCase().includes(filtr))\r\n  \r\n  const short = {\r\n    newName,\r\n    newNumber,\r\n    handleNameChange,\r\n    handleNumberChange,\r\n    handleSearchChange,\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Phonebook</h1>\r\n      <Notification message={message}/>\r\n      <h2>Search:</h2>\r\n        <Filter filtr={filtr} short={short}/>\r\n      <h2>Add New:</h2>\r\n          <ContactForm addPerson={addPerson} short={short}/>\r\n      <h2>Numbers</h2>\r\n      <ul>\r\n          <Contacts contacts={filtr ? filtredPerson :person} setPerson={setPerson} setMessage={setMessage}/>\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\nimport './index.css'\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n"],"sourceRoot":""}